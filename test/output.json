{
	"type": "prog",
	"prog": [
		{
			"type": "setting",
			"name": "namespace",
			"value": "myNamespace"
		},
		{
			"type": "group",
			"name": "myFolder",
			"body": {
				"type": "function",
				"name": "myFunction",
				"body": {
					"type": "prog",
					"prog": [
						{
							"type": "comment",
							"value": "# Parsed comments (get added to final function file) cannot be in root\r"
						},
						{
							"type": "command",
							"value": [
								{
									"type": "reg",
									"value": "say"
								},
								{
									"type": "reg",
									"value": "hello"
								},
								{
									"type": "reg",
									"value": "world"
								}
							]
						},
						{
							"type": "assign",
							"operator": "=",
							"left": {
								"type": "var",
								"value": "$stringVar"
							},
							"right": {
								"type": "str",
								"value": "a string var"
							}
						},
						{
							"type": "assign",
							"operator": "=",
							"left": {
								"type": "var",
								"value": "$numberVar"
							},
							"right": {
								"type": "num",
								"value": 3.1415
							}
						},
						{
							"type": "assign",
							"operator": "=",
							"left": {
								"type": "var",
								"value": "$boolVar"
							},
							"right": {
								"type": "bool",
								"value": true
							}
						},
						{
							"type": "assign",
							"operator": "=",
							"left": {
								"type": "var",
								"value": "$arrVar"
							},
							"right": {
								"type": "array",
								"value": [
									{
										"type": "num",
										"value": 15
									},
									{
										"type": "str",
										"value": "test"
									},
									{
										"type": "bool",
										"value": false
									}
								]
							}
						},
						{
							"type": "ivar",
							"value": "$arrVar",
							"index": {
								"type": "num",
								"value": 1
							}
						},
						{
							"type": "assign",
							"operator": "=",
							"left": {
								"type": "ivar",
								"value": "$stringVar"
							},
							"right": {
								"type": "str",
								"value": "another string"
							}
						},
						{
							"type": "command",
							"value": [
								{
									"type": "reg",
									"value": "tellraw"
								},
								{
									"type": "selector",
									"value": "@a"
								},
								{
									"type": "punc",
									"value": "{"
								},
								{
									"type": "str",
									"value": "text"
								},
								{
									"type": "colon"
								},
								{
									"type": "ivar",
									"value": "$stringVar"
								},
								{
									"type": "punc",
									"value": "}"
								}
							]
						},
						{
							"type": "if",
							"cond": [
								{
									"type": "binary",
									"operator": "<",
									"left": {
										"type": "ivar",
										"value": "$numberVar"
									},
									"right": {
										"type": "num",
										"value": 4
									}
								}
							],
							"then": {
								"type": "command",
								"value": [
									{
										"type": "reg",
										"value": "say"
									},
									{
										"type": "reg",
										"value": "Number"
									},
									{
										"type": "reg",
										"value": "is"
									},
									{
										"type": "reg",
										"value": "less"
									},
									{
										"type": "reg",
										"value": "than"
									},
									{
										"type": "num",
										"value": 4
									}
								]
							},
							"else": {
								"type": "if",
								"cond": [
									{
										"type": "binary",
										"operator": "==",
										"left": {
											"type": "ivar",
											"value": "$numberVar"
										},
										"right": {
											"type": "num",
											"value": 4
										}
									}
								],
								"then": {
									"type": "command",
									"value": [
										{
											"type": "reg",
											"value": "say"
										},
										{
											"type": "reg",
											"value": "Number"
										},
										{
											"type": "reg",
											"value": "is"
										},
										{
											"type": "reg",
											"value": "equal"
										},
										{
											"type": "reg",
											"value": "to"
										},
										{
											"type": "num",
											"value": 4
										}
									]
								},
								"else": {
									"type": "command",
									"value": [
										{
											"type": "reg",
											"value": "say"
										},
										{
											"type": "reg",
											"value": "Number"
										},
										{
											"type": "reg",
											"value": "is"
										},
										{
											"type": "reg",
											"value": "greater"
										},
										{
											"type": "reg",
											"value": "than"
										},
										{
											"type": "num",
											"value": 4
										}
									]
								}
							}
						},
						{
							"type": "for",
							"params": [
								{
									"type": "assign",
									"operator": "=",
									"left": {
										"type": "var",
										"value": "$i"
									},
									"right": {
										"type": "num",
										"value": 0
									}
								},
								{
									"type": "binary",
									"operator": "<",
									"left": {
										"type": "ivar",
										"value": "$i"
									},
									"right": {
										"type": "num",
										"value": 4
									}
								},
								{
									"type": "assign",
									"operator": "=",
									"left": {
										"type": "ivar",
										"value": "$i"
									},
									"right": {
										"type": "binary",
										"operator": "+",
										"left": {
											"type": "ivar",
											"value": "$i"
										},
										"right": {
											"type": "num",
											"value": 1
										}
									}
								}
							],
							"then": {
								"type": "command",
								"value": [
									{
										"type": "reg",
										"value": "say"
									},
									{
										"type": "reg",
										"value": "Num"
									},
									{
										"type": "ivar",
										"value": "$i"
									}
								]
							}
						},
						{
							"type": "foreach",
							"variable": {
								"type": "ivar",
								"value": "$j"
							},
							"param": {
								"type": "call",
								"func": {
									"type": "reg",
									"value": "range"
								},
								"args": [
									{
										"type": "num",
										"value": 0
									},
									{
										"type": "num",
										"value": 3
									}
								]
							},
							"then": {
								"type": "command",
								"value": [
									{
										"type": "reg",
										"value": "say"
									},
									{
										"type": "reg",
										"value": "Num"
									},
									{
										"type": "ivar",
										"value": "$j"
									}
								]
							}
						},
						{
							"type": "execute",
							"selector": {
								"type": "selector",
								"value": "@a"
							},
							"pos": [
								{
									"type": "relative"
								},
								{
									"type": "relative"
								},
								{
									"type": "relative"
								}
							],
							"prog": {
								"type": "command",
								"value": [
									{
										"type": "reg",
										"value": "say"
									},
									{
										"type": "reg",
										"value": "Hello"
									},
									{
										"type": "reg",
										"value": "World"
									}
								]
							}
						},
						{
							"type": "command",
							"value": [
								{
									"type": "reg",
									"value": "function"
								},
								{
									"type": "reg",
									"value": "myNamespace"
								},
								{
									"type": "colon"
								},
								{
									"type": "reg",
									"value": "callAMacro"
								},
								{
									"type": "kw",
									"value": "if"
								},
								{
									"type": "selector",
									"value": "@a[score_hello=1]"
								}
							]
						}
					]
				}
			}
		},
		{
			"type": "macro",
			"name": "aMacro",
			"vars": [
				"$parameter1",
				"$parameter2"
			],
			"body": {
				"type": "prog",
				"prog": [
					{
						"type": "command",
						"value": [
							{
								"type": "reg",
								"value": "tellraw"
							},
							{
								"type": "ivar",
								"value": "$parameter1"
							},
							{
								"type": "punc",
								"value": "{"
							},
							{
								"type": "str",
								"value": "text"
							},
							{
								"type": "colon"
							},
							{
								"type": "str",
								"value": [
									{
										"type": "str",
										"value": "Hello, my name is "
									},
									{
										"type": "prog",
										"prog": [
											{
												"type": "ivar",
												"value": "$parameter2"
											}
										]
									},
									{
										"type": "str",
										"value": "."
									}
								]
							},
							{
								"type": "punc",
								"value": "}"
							}
						]
					},
					{
						"type": "return",
						"value": {
							"type": "num",
							"value": 5
						}
					}
				]
			}
		},
		{
			"type": "function",
			"name": "callAMacro",
			"body": {
				"type": "prog",
				"prog": [
					{
						"type": "assign",
						"operator": "=",
						"left": {
							"type": "var",
							"value": "$selector"
						},
						"right": {
							"type": "selector",
							"value": "@a[score_hello_min=1]"
						}
					},
					{
						"type": "assign",
						"operator": "=",
						"left": {
							"type": "var",
							"value": "$hey"
						},
						"right": {
							"type": "call",
							"func": {
								"type": "reg",
								"value": "aMacro"
							},
							"args": [
								{
									"type": "ivar",
									"value": "$selector"
								},
								{
									"type": "str",
									"value": "John"
								}
							]
						}
					},
					{
						"type": "command",
						"value": [
							{
								"type": "reg",
								"value": "tellraw"
							},
							{
								"type": "selector",
								"value": "@a[score_hello_min=1]"
							},
							{
								"type": "punc",
								"value": "{"
							},
							{
								"type": "str",
								"value": "text"
							},
							{
								"type": "colon"
							},
							{
								"type": "str",
								"value": "Hello, my name is John."
							},
							{
								"type": "punc",
								"value": "}"
							},
							{
								"type": "kw",
								"value": "var"
							},
							{
								"type": "ivar",
								"value": "$hey"
							},
							{
								"type": "op",
								"value": "="
							},
							{
								"type": "num",
								"value": 5
							}
						]
					}
				]
			}
		}
	]
}